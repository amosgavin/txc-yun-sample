<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">


    <!--dubbo配置-->
    <!-- 消费方应用名 -->
    <dubbo:application name="order-client"  />
    <!-- 采用multicast注册中心-->
    <dubbo:registry address="multicast://224.5.6.7:1234?unicast=false" />
    <!-- 生成远程服务代理，可以和本地bean一样使用OrderService -->
    <dubbo:reference id="OrderService" interface="com.taobao.txc.dubbo.OrderService"  />
    <!-- 生成远程服务代理，可以和本地bean一样使用StockService -->
    <dubbo:reference id="StockService" interface="com.taobao.txc.dubbo.StockService" />

    <!---阿里云环境下：GTS Scanner配置方式-->
    <bean class="com.taobao.txc.client.aop.TxcTransactionScaner">
        <constructor-arg value="xxx"/>
        <property name="accessKey" value="xxx"/>
        <property name="secretKey" value="xxx"/>
    </bean>
    <!---公网测试环境下：GTS Scanner配置方式-->
    <!--<bean class="com.taobao.txc.client.aop.TxcTransactionScaner">-->
    <!--<constructor-arg value="myapp"/>-->
    <!--<constructor-arg value="txc_test_public.1129361738553704.QD"/>-->
    <!--<constructor-arg value="1" />-->
    <!--<constructor-arg value="https://test-cs-gts.aliyuncs.com" />-->
    <!--</bean>-->

    <!--将客户端类配置为bean对象，分布式事务才会启动哦-->
    <bean id="client" class="com.taobao.txc.dubbo.Client" />

</beans>